GAS LISTING bios.s 			page 1


   1              	# 1 "bios.S"
   1              	/*
   0              	
   2              	** File:    bios.S
   3              	**
   4              	** Author:  Sean Congden
   5              	**
   6              	** Description: Support functions for making bios calls.
   7              	** 
   8              	*/
   9              	
  10              	#define __ASM__20113__
  11              	
  12              	#include "bootstrap.h"
   1              	/*
  13              	#include "vesa.h"
   1              	/*
  14              	
  15              	
  16              		.code32
  17              		.globl vesa_test
  18              	vesa_test:
  19 0000 60       		pushal
  20              	/*
  21              		call switch_to_real_mode
  22              		.code16
  23              	
  24              		movw $mymsg, %si
  25              		call dispMsg
  26              	
  27              		call switch_to_protected_mode
  28              		.code32*/
  29              	
  30 0001 BEDEC001 		movl	$0xc001c0de, %esi
  30      C0
  31              	
  32 0006 61       		popal
  33 0007 C3       		ret
  34              	
  35              	
  36              	
  37              		.code16
  38              	dispMsg:	
  39 0008 50       		pushw	%ax
  40 0009 53       		pushw	%bx
  41              	repeat:
  42 000a AC       		lodsb			/* grab next character */
  43              	
  44 000b B40E     		movb	$0x0e, %ah	/* write and advance cursor */
  45 000d BB0700   		movw	$0x07, %bx	/* page 0, white on blank, no blink */
  46 0010 08C0     		orb	%al, %al	/* AL is character to write */
  47 0012 7404     		jz	getOut		/* if we've reached the NUL, get out */
  48              	
  49 0014 CD10     		int	$0x10		/* otherwise, print and repeat */
  50 0016 EBF2     		jmp	repeat	
  51              	
  52              	getOut:				/* we're done, so return */
GAS LISTING bios.s 			page 2


  53 0018 5B       		popw	%bx
  54 0019 58       		popw	%ax
  55 001a C3       		ret
  56              	
  57              	
  58              	mymsg:
  59 001b 0A0D4249 		.asciz "\n\rBIOS CALL TEST\n\r"
  59      4F532043 
  59      414C4C20 
  59      54455354 
  59      0A0D00
  60              	
  61              	/*
  62              	** Switches from protected mode to real mode
  63              	*/
  64              		.code32
  65              		.globl switch_to_real_mode
  66              	switch_to_real_mode:
  67 002e 60       		pushal
  68              	
  69 002f FA       		cli
  70              	
  71              		/* Save the current ESP and EBP values */
  72 0030 89E0     		movl	%esp, %eax
  73 0032 A304DC00 		movl	%eax, RM_SAVED_ESP
  73      00
  74 0037 892D08DC 		movl	%ebp, RM_SAVED_EBP
  74      0000
  75              	
  76              		/* Set up the real mode stack */
  77 003d 8B0424   		movl	(%esp), %eax		/* copy the return address to the real stack */
  78 0040 66A3FE5F 		movw	%ax, (REAL_STACK - 0x2)
  78      0000
  79              	
  80 0046 B8FE5F00 		movl	$(REAL_STACK - 0x2), %eax /* switch to using the real mode stack */
  80      00
  81 004b 89C5     		movl	%eax, %ebp
  82 004d 89C4     		movl	%eax, %esp
  83              	
  84              		/* Load the real mode GDT selectors */
  85 004f 66B83000 		movw	$GDT_DATA_16, %ax
  86 0053 8ED8     		movw	%ax, %ds
  87 0055 8EC0     		movw	%ax, %es
  88 0057 8EE0     		movw	%ax, %fs
  89 0059 8EE8     		movw	%ax, %gs
  90 005b 66B83800 		movw	$GDT_STACK_16, %ax
  91 005f 8ED0     		movw	%ax, %ss
  92              	
  93 0061 EA680000 		ljmp	$GDT_CODE_16, $_not_quite_real
  93      002800
  94              	
  95              	_not_quite_real:
  96              	
  97              		/* Switch of the protected mode flag */
  98 0068 0F20C0   		movl	%cr0, %eax				/* get current CR0 */
  99 006b 83E0FE   		andl	$0xfffffffe, %eax		/* clear the PE bit */
 100 006e 0F22C0   		movl	%eax, %cr0				/* and store it back. */
GAS LISTING bios.s 			page 3


 101              	
 102              		/* Long jump to a real mode code segment */
 103 0071 66       		.byte	0x66
 104 0072 EA790000 		ljmp	$0x1000, $_real_mode_segment
 104      000010
 105              	
 106              		.code16
 107              	_real_mode_segment:
 108              	
 109              		/* Clear the segment registers */
 110 0079 B80010   		movw	$0x1000, %ax
 111 007c 8ED8     		movw	%ax, %ds
 112 007e 8EC0     		movw	%ax, %es
 113 0080 8EE0     		movw	%ax, %fs
 114 0082 8EE8     		movw	%ax, %gs
 115              	
 116 0084 31C0     		xorw	%ax, %ax
 117 0086 8ED0     		movw	%ax, %ss
 118              	
 119              		/* Load the real mode IDT */
 120 0088 0F011EDB 		lidt	(_real_idt)
 120      00
 121              	
 122 008d FB       		sti
 123 008e C3       		ret
 124              	
 125              	
 126              	
 127              	/*
 128              	** Returns to protected mode from real mode
 129              	*/
 130              		.globl switch_to_protected_mode
 131              	switch_to_protected_mode:
 132              		.code16
 133              	
 134 008f FA       		cli
 135              	
 136              		/* Load the protected mode IDT */
 137 0090 0F011EE1 		lidt	(_idt_48)
 137      00
 138              	
 139              		/* Set the protected mode flag */
 140 0095 0F20C0   		movl	%cr0, %eax				/* get current CR0 */
 141 0098 0C01     		orb		$0x1, %al				/* set the PE bit */
 142 009a 0F22C0   		movl	%eax, %cr0				/* and store it back. */
 143              		
 144              		/* Long jump to a real mode code segment */
 145 009d 66       		.byte	0x66
 146              		.code32
 147 009e EAA50001 		ljmp	$GDT_CODE, $(_protected_mode_segment + 0x10000)
 147      001000
 148              	
 149              	_protected_mode_segment:
 150              	
 151              		/* Save the current return address */
 152 00a5 8B0424   		movl	(%esp), %eax
 153 00a8 A3006000 		movl	%eax, REAL_STACK
GAS LISTING bios.s 			page 4


 153      00
 154              	
 155              		/* Switch to the protected mode stack */
 156 00ad B804DC00 		movl	$RM_SAVED_ESP, %eax		/* restore saved ESP and EBP */
 156      00
 157 00b2 89C4     		movl	%eax, %esp
 158 00b4 BD08DC00 		movl	$RM_SAVED_EBP, %ebp
 158      00
 159              	
 160 00b9 A1006000 		movl	REAL_STACK, %eax		/* copy the return address to the stack */
 160      00
 161 00be 05000001 		addl	$0x10000, %eax
 161      00
 162 00c3 890424   		movl	%eax, (%esp)
 163              	
 164              		/* Load the real mode GDT selectors */
 165 00c6 66B81800 		movw	$GDT_DATA, %ax
 166 00ca 8ED8     		movw	%ax, %ds
 167 00cc 8EC0     		movw	%ax, %es
 168 00ce 8EE0     		movw	%ax, %fs
 169 00d0 8EE8     		movw	%ax, %gs
 170 00d2 66B82000 		movw	$GDT_STACK, %ax
 171 00d6 8ED0     		movw	%ax, %ss
 172              	
 173 00d8 FB       		sti
 174              	
 175 00d9 61       		popal
 176 00da C3       		ret
 177              	
 178              	
 179              	
 180              		.code16
 181              	_real_idt:
 182 00db FF03     		.short 0x3ff
 183 00dd 00000000 		.long 0x0
 184              	
 185              	_idt_48:
 186 00e1 0008     		.word	0x0800
 187 00e3 00250000 		.quad	IDT_ADDRESS
 187      00000000 
GAS LISTING bios.s 			page 5


DEFINED SYMBOLS
              bios.S:18     .text:0000000000000000 vesa_test
              bios.S:38     .text:0000000000000008 dispMsg
              bios.S:41     .text:000000000000000a repeat
              bios.S:52     .text:0000000000000018 getOut
              bios.S:58     .text:000000000000001b mymsg
              bios.S:66     .text:000000000000002e switch_to_real_mode
              bios.S:95     .text:0000000000000068 _not_quite_real
              bios.S:107    .text:0000000000000079 _real_mode_segment
              bios.S:181    .text:00000000000000db _real_idt
              bios.S:131    .text:000000000000008f switch_to_protected_mode
              bios.S:185    .text:00000000000000e1 _idt_48
              bios.S:149    .text:00000000000000a5 _protected_mode_segment

NO UNDEFINED SYMBOLS
